{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","items","useState","visibleItems","setVisibleItems","pages","Math","ceil","useEffect","filter","item","className","classNames","disabled","href","onClick","map","page","active","App","setPerPage","setCurrentPage","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQX,EAAW,EAAG,IAC5B,EAAwCY,mBAASD,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAQf,EAAW,EAAGgB,KAAKC,KAAKV,EAAQC,IAY9C,OAVAU,qBAAU,WACRJ,EAAgBH,EAAMQ,QAAO,SAAAC,GAAI,OAAIA,GAAQZ,QAC5C,CAACA,IAEJU,qBAAU,WACRJ,EAAgBH,EAAMQ,QAAO,SAAAC,GAAI,OAC/BA,GAAQZ,EAAUC,GAAeW,EAAOZ,GAAWC,EAAc,SAElE,CAACA,IAGF,qCACE,qBAAIY,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBd,IAHhB,SAME,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,WACPf,EAAaD,EAAc,IAN/B,oBAYDM,EAAMW,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASlB,IAHvB,SAME,mBAAG,UAAQ,WAAWY,UAAU,YAAYG,KAAI,WAAMG,GAAQF,QAAS,kBAAMf,EAAaiB,IAA1F,SAAkGA,SAGtG,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUd,IAAgBO,KAAKC,KAAKV,EAAQC,KAHlD,SAME,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAAS,WACPf,EAAaD,EAAc,IAN/B,uBAaJ,6BACGI,EAAaa,KAAI,SAAAN,GAAI,OACpB,oBAAI,UAAQ,OAAZ,wBAA4BA,cC9EzBS,EAAgB,WAC3B,MAA8BjB,mBAAS,GAAvC,mBAAOJ,EAAP,KAAgBsB,EAAhB,KACA,EAAsClB,mBAAS,GAA/C,mBAAOH,EAAP,KAAoBsB,EAApB,KAEA,OACE,sBAAKV,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,iBAEG,IACAZ,EACA,IAJH,QAMG,IACAD,GAAWC,EAAc,GAAK,EAC9B,IARH,IAUG,IACAD,EAAUC,EAAc,GAAK,GAAKD,EAAUC,EAC5C,IAZH,WAgBA,sBAAKY,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRW,GAAG,kBACHX,UAAU,eACVY,MAAOzB,EACP0B,SAAU,SAACC,GACTL,GAAYK,EAAMC,OAAOH,OACzBF,EAAe,IAPnB,UAUE,wBAAQE,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBhB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAAO,GACPC,QAASA,EACTC,YAAaA,EACbC,aAAcqB,QCvDtBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a015bfa4.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getNumbers } from '../../utils';\n\nexport type Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (currentPage: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const items = getNumbers(1, 42);\n  const [visibleItems, setVisibleItems] = useState(items);\n\n  const pages = getNumbers(1, Math.ceil(total / perPage));\n\n  useEffect(() => {\n    setVisibleItems(items.filter(item => item <= perPage));\n  }, [perPage]);\n\n  useEffect(() => {\n    setVisibleItems(items.filter(item => (\n      item <= perPage * currentPage && item > perPage * (currentPage - 1)\n    )));\n  }, [currentPage]);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => {\n              onPageChange(currentPage - 1);\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: page === currentPage },\n            )}\n          >\n            <a data-cy=\"pageLink\" className=\"page-link\" href={`#${page}`} onClick={() => onPageChange(page)}>{page}</a>\n          </li>\n        ))}\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === Math.ceil(total / perPage) },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => {\n              onPageChange(currentPage + 1);\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\">{`Item ${item}`}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {' '}\n        {currentPage}\n        {' '}\n        items\n        {' '}\n        {perPage * (currentPage - 1) + 1}\n        {' '}\n        -\n        {' '}\n        {perPage * currentPage > 42 ? 42 : perPage * currentPage }\n        {' '}\n        of 42\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}